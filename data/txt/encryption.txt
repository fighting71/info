author:yj

since:2018-1-9

direction:encryption

	1.js deal:
        setMaxDigits(131);
		 var key = new RSAKeyPair(
			 $("#Exponent").val(),//010001
			 "",
			 $("#Modulus").val()//A9F1C857E014C9D0A5C49CA43763C3471B7ED7DBC66CAD2CE3F305BA6EF33872C0C65665FE08ACFAE7F7EBDC6EB2D862222164E9CD25B094E217FA7D5D20502B4114798F9B34B2AFDE8BA2376F66FE0C5EA573BBF0FE7D99DD1BB3BCC526583ED361E09004452BBD73385BDCFD607E83C9E00D59B350CA0216B43A9405A5EA7B
		);
        var posx = encryptedString(
			key, 
			base64encode($("#Mobile").val()) + "\\" + base64encode($("#Psw").val())
		);
		
		loginpk
		
	2.controller deal:
				RSACrypto rsa = new RSACrypto();
                loginpk = StringHelper.GetDecryption(loginpk);
				
					correlation method:
						 public static string GetDecryption(string strValue)
						{
						  return StringHelper.GetDecryption(strValue, Settings.WeiFos_Key);
						}
						
						public static string GetDecryption(string strValue, string key)
						{
						  string s = StringHelper.ConvertTo32BitSHA1(key).Substring(0, 8);
						  DESCryptoServiceProvider cryptoServiceProvider = new DESCryptoServiceProvider();
						  cryptoServiceProvider.Key = Encoding.ASCII.GetBytes(s);
						  cryptoServiceProvider.IV = Encoding.ASCII.GetBytes(s);
						  byte[] buffer = new byte[strValue.Length / 2];
						  for (int index = 0; index < strValue.Length / 2; ++index)
						  {
							int num = Convert.ToInt32(strValue.Substring(index * 2, 2), 16);
							buffer[index] = (byte) num;
						  }
						  MemoryStream memoryStream = new MemoryStream();
						  CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, cryptoServiceProvider.CreateDecryptor(), CryptoStreamMode.Write);
						  cryptoStream.Write(buffer, 0, buffer.Length);
						  cryptoStream.FlushFinalBlock();
						  memoryStream.Close();
						  return Encoding.GetEncoding("GB2312").GetString(memoryStream.ToArray());
						}
				
                rsa.InitCrypto(loginpk);
                string tmp = StringHelper.ASCIIBytesToString(rsa.Decrypt(StringHelper.HexStringToBytes(posx)));
                if (string.IsNullOrEmpty(tmp))
                {
                    throw new Exception("信息填写不完整！");
                }
                string[] parts = tmp.Split('\\');
                string login_name = StringHelper.ASCIIBytesToString(StringHelper.FromBase64(parts[0]));
                string psw = StringHelper.ASCIIBytesToString(StringHelper.FromBase64(parts[1]));
