
author:yj

since:2018-1-5

direction:ef

ef modelStatus:
	//实体对象的状态。  
	[Flags]  
	public enum EntityState  
	{  
		// 摘要:  
		//     对象存在，但未由对象服务跟踪。在创建实体之后、但将其添加到对象上下文之前，该实体处于此状态。通过调用 System.Data.Objects.ObjectContext.Detach(System.Object)  
		//     方法从上下文中移除实体后，或者使用 System.Data.Objects.MergeOption.NoTrackingSystem.Data.Objects.MergeOption  
		//     加载实体后，该实体也会处于此状态。  
		Detached = 1,  
		//  
		// 摘要:  
		//     自对象加载到上下文中后，或自上次调用 System.Data.Objects.ObjectContext.SaveChanges() 方法后，此对象尚未经过修改。  
		Unchanged = 2,  
		//  
		// 摘要:  
		//     对象已添加到对象上下文，但尚未调用 System.Data.Objects.ObjectContext.SaveChanges() 方法。对象是通过调用  
		//     System.Data.Objects.ObjectContext.AddObject(System.String,System.Object)  
		//     方法添加到对象上下文中的。  
		Added = 4,  
		//  
		// 摘要:  
		//     使用 System.Data.Objects.ObjectContext.DeleteObject(System.Object) 方法从对象上下文中删除了对象。  
		Deleted = 8,  
		//  
		// 摘要:  
		//     对象已更改，但尚未调用 System.Data.Objects.ObjectContext.SaveChanges() 方法。  
		Modified = 16,  
	}

ef 部分列修改：
			//获取上下文
			hyhtEntities dbContext = new hyhtEntities();
			//取消实体验证
            dbContext.Configuration.ValidateOnSaveEnabled = false;
			//指定实体状态
            dbContext.Entry(user).State = EntityState.Unchanged;
			//指定需要修改的列
            dbContext.Entry(user).Property(u =>  u.LoginName ).IsModified = true;
			//...
            user.LoginName = "testtestetset";
			//保存操作
            dbContext.SaveChanges();
	
			--------效率高--------
			//获取实体
			var info = dbContext.T_User.FirstOrDefault(u => u.ID == 110081);
			//更新列
            info.LoginName = "temptemptemp";
			//保存操作
            dbContext.SaveChanges();
			