author:yj

since:2018-1-10

direction:flow--[代金券]一键提现

	1.基础验证
		string.IsNullOrWhiteSpace(user.HuiFuAccount);//验证汇付账户
		
        UserBankCard bankCardEntity = ServiceFactory.GetService<UserBankCardService>().GetDefaultCard(user.ID);//查看默认银行卡
			验证条件：IsDefault=1 and IsEnable=1 and UserID=uid
		
	2.获取可提现优惠券列表
		
        var vouc = ServiceFactory.GetService<UserVoucherService>().GetList(user:user,state:0,giftType:0,useStatus:0);
			method description:
				/// <summary>
				/// 获取优惠券列表
				/// </summary>
				/// <param name="user"></param>
				/// <param name="state">是否已激活[0--未激活 1--已激活]</param>
				/// <param name="giftType">优惠券类型[1:代金券，2：加息券，3：返现，4：加息，5：体验金][0:红包(特殊查询)]</param>
				/// <param name="useStatus">是否已使用[0--未使用 1--已使用]</param>
				/// <returns></returns>
				public List<UserVoucher> GetList(User user, int state = -1, int giftType = -1,int useStatus = -1);
				
	3.二次验证
		//验证运营账户余额是否充足
        var state = Service.HuiFuModule.CallBackService.SubAcctAmount(vouc.Sum(o => o.VMoney));
		
	4.遍历列表进行处理
		a.新增资金流水
			var _state = ServiceFactory.GetService<FundsFlowService>().DoCusTransfer(user, user.HuiFuAccount, vou.VMoney, FeeType.VoucherTransfer, "用户红包提现", vou.ID, DateTime.Now, out outflowid);
			>>>>>>method step:
			
			i.记录转账流水
			#region 添加流水记录实体
			var fundsflow = new FundsFlow()
			{
				IsEnable = false,
				IsComputing = false,
				IsFreeze = false,
				CreatedTime = DateTime.Now,
				CreatedUserID = user.ID,
				//UpdatedTime = DateTime.Now,
				Amount = TransAmt,
				FeeType = (int)feeType,
				InUserID = user.ID,
				OrderNo = OrdId,
				OutUserID = (int)PayPlatform.Platform,
				RelationID = relationID,
				Remark = remark
            };
			
			ii.新增操作日志
				var remarks = string.Format("平台通过转账接口给用户【{0}】转账({1}【{2}】【{3}】)", user.ID,TransAmt,EnumHelper.GetEnumDescByValue(typeof(FeeType),feeType), startTime);
				SysLogs log = new SysLogs();
				log.Content = remarks;
				log.SysUserID = user.ID;
				log.CreatedTime = DateTime.Now;
				log.Type = 0;
				s.Insert(log);
			
			iii.进行资金转账
				var res = HuiFuAPI.SubmitTransfer(new HuiFu.Entity.SignReq.ReqTransfer()
				{
					OrdId = OrdId,
					OutCustId = OutCustId,
					OutAcctId = OutAcctId,
					InCustId = InCustId,
					InAcctId = InAcctId,
					TransAmt = TransAmt.ToString("0.00"),
					RetUrl = ""
				});
			
		d.获取流水记录
			var flow = ServiceFactory.GetService<FundsFlowService>().GetById(outflowid);
		
		e.更改优惠券状态
			vou.Status = 1;
			vou.UseStatus = 1;
			ServiceFactory.GetService<UserVoucherService>().Update(vou);
			
		f.新增用户代金券使用记录
			ServiceFactory.GetService<UserUseVoucherService>().Insert(use_voucher);	
			
		g.准备提现(代金券（红包）)
			var ordNo = srv.ReadyVoucherWithdrawalAll(user, vouc.Sum(o => o.VMoney), bankCardEntity.Number);
			>>>>>>>>>>method step:
				i.新增操作记录
					UserOperaRecord opRecord = new UserOperaRecord();
					//用户ID
					opRecord.UserID = user.ID;
					//业务ID 
					opRecord.HuiFuAccount = user.HuiFuAccount;
					//业务ID(充值订单号)
					opRecord.BizID = withdrawalNo;
					//业务类型
					opRecord.BizType = (int)OperaType.Withdrawal;
					//创建时间
					opRecord.CreatedTime = DateTime.Now;
					//操作类容
					string content = "用户：{0},发起申请提现红包，订单号:{1},提现金额:{2}";
					opRecord.Content = string.Format(content, user.LoginName, withdrawalNo, finalWithdrawal);
					//IP地址
					opRecord.IP = HttpHelper.GetClientIp();
					//客户端类型
					opRecord.ClientDevices = (int)ClientDevices.Computer;
					//写入操作记录
					s.Insert(opRecord);
			
				ii.新增提现记录
					var withdrawal = new Withdrawal
					{
						IsEnable = false,
						CreatedTime = createTime,
						Amount = finalWithdrawal,
						ActualWithdrawal = finalWithdrawal,
						FixedAmount = fixedAmount,
						ExtAmount = extAmount,
						UserID = user.ID,
						BankCardNumber = string.IsNullOrEmpty(bankCardEntity.Number) ? "" : bankCardEntity.Number,
						//WithdrawalMode=0,
						WithdrawalFee = WithdrawalFee + FixedFee,
						Remark = "用户申请提现红包[" + voucherAmount + "]元",
						OrderNumber = withdrawalNo,
						BankCardName = string.IsNullOrEmpty(bankCardEntity.Name) ? "" : bankCardEntity.Name,
						BankCardSubbranch = string.IsNullOrEmpty(bankCardEntity.Subbranch) ? "" : bankCardEntity.Subbranch,
					};
					s.Insert(withdrawal);
			
				iii.新增资金流水
					 var fundsFlow_withdrawal = new FundsFlow
					{
						IsEnable = false,
						IsFreeze = true,
						IsComputing = false,
						CreatedTime = createTime,
						OrderNo = withdrawalNo,
						Amount = finalWithdrawal,
						OutUserID = user.ID,
						InUserID = (int)PayPlatform.Platform,
						FeeType = (int)FeeType.VoucherWithdrawal,
						RelationID = withdrawal.ID,
						Remark = "用户提现红包(实际到账金额)",
					};
					s.Insert(fundsFlow_withdrawal);
		
		h.进行红包提现
			 var ret = srv.VoucherWithdrawal(user, ordNo, null, MerWithdrawalRetUrl, string.Join(",", vouc.Select(o => o.ID)));
			 >>>>>>>>>method code
				if (user == null || string.IsNullOrWhiteSpace(orderNo)) return null;

				var withdrawalEntity = ServiceFactory.GetService<WithdrawalService>().GetByOrdNo(orderNo);

				if (withdrawalEntity == null) return null;

				MerCash cash = new MerCash();
				cash.OpenAcctId = withdrawalEntity.BankCardNumber;
				cash.OrdId = orderNo;
				cash.ReqExt = "{\"FeeObjFlag\":\"M\",\"FeeAcctId\":\"" + Settings.AppSettings("MerInAcctId") + "\",\"CashChl\":\"GENERAL\"}";
				cash.FeeObjFlag = "M";
				cash.FeeAcctId = Settings.AppSettings("MerInAcctId");
				cash.RetUrl = retUrl;
				cash.ServFee = withdrawalEntity.WithdrawalFee.ToString("0.00");
				//cash.ServFee = FixedFee.ToString("0.00");
				cash.TransAmt = withdrawalEntity.Amount.ToString("0.00");
				cash.ServFeeAcctId = MerInAcctId;
				if (!string.IsNullOrEmpty(PageType))
				{
					cash.PageType = "1";
				}
				cash.MerPriv = voucherIDs;
				cash.Remark = "";
				cash.UsrCustId = user.HuiFuAccount;

				if (HuiFu.HuiFuAPI.MerCashSign(ref cash))
				{
					return cash;
				}
				return null;

		i.return 提现相关实体
			return Json(new { basis = new { Status = 1 }, result = ret });
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			